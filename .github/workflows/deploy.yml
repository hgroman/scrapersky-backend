name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Lint with ruff
        run: |
          ruff check .

      - name: Check for raw SQL outside migrations directory
        run: |
          # Fail if raw SQL is found outside of supabase/migrations/
          ! grep -r --include="*.py" "text(" ./src ||
          ! grep -r --include="*.py" "\"SELECT " ./src

  deploy:
    needs: [test, lint]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Supabase CLI
        run: |
          curl -s https://packages.supabase.com/gpg.key | sudo apt-key add -
          echo "deb https://packages.supabase.com stable main" | sudo tee /etc/apt/sources.list.d/supabase.list
          sudo apt-get update
          sudo apt-get install supabase

      - name: Apply database migrations
        run: |
          supabase db push --db-url ${{ secrets.SUPABASE_DB_URL }}

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
            -H "Authorization: Bearer $RENDER_API_KEY"
