apiVersion: apps/v1
kind: Deployment
metadata:
  name: scrapersky
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scrapersky
  template:
    metadata:
      labels:
        app: scrapersky
    spec:
      containers:
      - name: scrapersky
        image: scrapersky:v1  # Update this with your actual image repository
        ports:
        - containerPort: 8000
        envFrom:
        - secretRef:
            name: scrapersky-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: scrapersky
spec:
  type: ClusterIP  # Using ClusterIP as we'll set up Ingress
  ports:
  - port: 80
    targetPort: 8000
  selector:
    app: scrapersky
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: scrapersky-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - scrapersky.yourdomain.com  # Update with your domain
    secretName: scrapersky-tls
  rules:
  - host: scrapersky.yourdomain.com  # Update with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: scrapersky
            port:
              number: 80
