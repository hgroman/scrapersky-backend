import uuid
from datetime import datetime
from typing import List, Optional

from pydantic import BaseModel

from src.models.enums import (
    ContactCurationStatus,
    ContactEmailTypeEnum,
    ContactProcessingStatus,
    HubSpotProcessingStatus,
    HubSpotSyncStatus,
)

# Base schema for contact fields to be shared
class ContactBase(BaseModel):
    email: str
    email_type: Optional[ContactEmailTypeEnum] = None
    has_gmail: Optional[bool] = None
    context: Optional[str] = None
    source_url: Optional[str] = None
    name: Optional[str] = None
    phone_number: Optional[str] = None
    domain_id: uuid.UUID
    page_id: uuid.UUID
    source_job_id: Optional[uuid.UUID] = None

# Schema for creating a contact
class ContactCreate(ContactBase):
    pass

# Schema for updating a contact - all fields are optional
class ContactUpdate(BaseModel):
    email: Optional[str] = None
    email_type: Optional[ContactEmailTypeEnum] = None
    has_gmail: Optional[bool] = None
    context: Optional[str] = None
    source_url: Optional[str] = None
    name: Optional[str] = None
    phone_number: Optional[str] = None
    contact_curation_status: Optional[ContactCurationStatus] = None
    contact_processing_status: Optional[ContactProcessingStatus] = None
    contact_processing_error: Optional[str] = None
    hubspot_sync_status: Optional[HubSpotSyncStatus] = None
    hubspot_processing_status: Optional[HubSpotProcessingStatus] = None
    hubspot_processing_error: Optional[str] = None

# Schema for reading a contact - includes fields generated by the DB
class ContactRead(ContactBase):
    id: uuid.UUID
    created_at: datetime
    updated_at: datetime
    contact_curation_status: ContactCurationStatus
    contact_processing_status: Optional[ContactProcessingStatus] = None
    contact_processing_error: Optional[str] = None
    hubspot_sync_status: HubSpotSyncStatus
    hubspot_processing_status: Optional[HubSpotProcessingStatus] = None
    hubspot_processing_error: Optional[str] = None

    class Config:
        from_attributes = True

# Schemas for batch operations

class ContactCurationBatchStatusUpdateRequest(BaseModel):
    contact_ids: List[uuid.UUID]
    status: ContactCurationStatus

class ContactCurationFilteredUpdateRequest(BaseModel):
    status: ContactCurationStatus
    # Filter fields (all optional)
    contact_curation_status: Optional[ContactCurationStatus] = None
    contact_processing_status: Optional[ContactProcessingStatus] = None
    hubspot_sync_status: Optional[HubSpotSyncStatus] = None
    email_type: Optional[ContactEmailTypeEnum] = None
    domain_id: Optional[uuid.UUID] = None
    page_id: Optional[uuid.UUID] = None
    email_contains: Optional[str] = None
    name_contains: Optional[str] = None
    has_gmail: Optional[bool] = None

class ContactCurationBatchUpdateResponse(BaseModel):
    updated_count: int
    queued_count: int
    hubspot_queued_count: int = 0
